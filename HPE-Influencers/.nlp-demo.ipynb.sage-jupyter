{"kernelspec":{"display_name":"Python 2 (SageMath)","language":"python","name":"python2"},"language_info":{"codemirror_mode":{"name":"ipython","version":2},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython2","version":"2.7.10"}}
{"cell_type":"code","execution_count":19,"metadata":{"collapsed":false,"trusted":true},"outputs":[],"source":"from nltk.tokenize import RegexpTokenizer\nfrom stop_words import get_stop_words\nfrom nltk.stem.porter import PorterStemmer\nfrom gensim import corpora, models\nimport gensim"}
{"cell_type":"code","execution_count":20,"metadata":{"collapsed":false,"trusted":true},"outputs":[],"source":"tokenizer = RegexpTokenizer(r'\\w+')"}
{"cell_type":"code","execution_count":21,"metadata":{"collapsed":true,"trusted":true},"outputs":[],"source":"# create English stop words list\nen_stop = get_stop_words('en')\n\n# Create p_stemmer of class PorterStemmer\np_stemmer = PorterStemmer()"}
{"cell_type":"code","execution_count":22,"metadata":{"collapsed":true,"trusted":true},"outputs":[],"source":"# create sample documents\ndoc_a = \"Brocolli is good to eat. My brother likes to eat good brocolli, but not my mother.\"\ndoc_b = \"My mother spends a lot of time driving my brother around to baseball practice.\"\ndoc_c = \"Some health experts suggest that driving may cause increased tension and blood pressure.\"\ndoc_d = \"I often feel pressure to perform well at school, but my mother never seems to drive my brother to do better.\"\ndoc_e = \"Health professionals say that brocolli is good for your health.\" \n\n# compile sample documents into a list\ndoc_set = [doc_a, doc_b, doc_c, doc_d, doc_e]"}
{"cell_type":"code","execution_count":23,"metadata":{"collapsed":false,"trusted":true},"outputs":[{"name":"stdout","output_type":"stream","text":"['Brocolli is good to eat. My brother likes to eat good brocolli, but not my mother.', 'My mother spends a lot of time driving my brother around to baseball practice.', 'Some health experts suggest that driving may cause increased tension and blood pressure.', 'I often feel pressure to perform well at school, but my mother never seems to drive my brother to do better.', 'Health professionals say that brocolli is good for your health.']\n"}],"source":"print doc_set"}
{"cell_type":"code","execution_count":24,"metadata":{"collapsed":true,"trusted":true},"outputs":[],"source":"# list for tokenized documents in loop\ntexts = []\n\n# loop through document list\nfor i in doc_set:\n    \n    # clean and tokenize document string\n    raw = i.lower()\n    tokens = tokenizer.tokenize(raw)\n\n    # remove stop words from tokens\n    stopped_tokens = [i for i in tokens if not i in en_stop]\n    \n    # stem tokens\n    stemmed_tokens = [p_stemmer.stem(i) for i in stopped_tokens]\n    \n    # add tokens to list\n    texts.append(stemmed_tokens)"}
{"cell_type":"code","execution_count":25,"metadata":{"collapsed":false,"trusted":true},"outputs":[{"name":"stdout","output_type":"stream","text":"[[u'brocolli', u'good', u'eat', u'brother', u'like', u'eat', u'good', u'brocolli', u'mother'], [u'mother', u'spend', u'lot', u'time', u'drive', u'brother', u'around', u'basebal', u'practic'], [u'health', u'expert', u'suggest', u'drive', u'may', u'caus', u'increas', u'tension', u'blood', u'pressur'], [u'often', u'feel', u'pressur', u'perform', u'well', u'school', u'mother', u'never', u'seem', u'drive', u'brother', u'better'], [u'health', u'profession', u'say', u'brocolli', u'good', u'health']]\n"}],"source":"print texts"}
{"cell_type":"code","execution_count":26,"metadata":{"collapsed":true,"trusted":true},"outputs":[],"source":"# turn our tokenized documents into a id <-> term dictionary\ndictionary = corpora.Dictionary(texts)\n    \n# convert tokenized documents into a document-term matrix\ncorpus = [dictionary.doc2bow(text) for text in texts]"}
{"cell_type":"code","execution_count":27,"metadata":{"collapsed":false,"trusted":true},"outputs":[{"name":"stdout","output_type":"stream","text":"[[(0, 2), (1, 2), (2, 1), (3, 1), (4, 1), (5, 2)], [(3, 1), (4, 1), (6, 1), (7, 1), (8, 1), (9, 1), (10, 1), (11, 1), (12, 1)], [(8, 1), (13, 1), (14, 1), (15, 1), (16, 1), (17, 1), (18, 1), (19, 1), (20, 1), (21, 1)], [(3, 1), (4, 1), (8, 1), (18, 1), (22, 1), (23, 1), (24, 1), (25, 1), (26, 1), (27, 1), (28, 1), (29, 1)], [(0, 1), (1, 1), (19, 2), (30, 1), (31, 1)]]\n"}],"source":"print corpus"}
{"cell_type":"code","execution_count":28,"metadata":{"collapsed":true,"trusted":true},"outputs":[],"source":"# generate LDA model\nldamodel = gensim.models.ldamodel.LdaModel(corpus, num_topics=3, id2word = dictionary, passes=40)"}
{"cell_type":"code","execution_count":29,"metadata":{"collapsed":false,"trusted":true},"outputs":[{"data":{"text/plain":"<gensim.models.ldamodel.LdaModel at 0x7fb15d792110>"},"execution_count":29,"metadata":{},"output_type":"execute_result"}],"source":"ldamodel"}
{"cell_type":"code","execution_count":30,"metadata":{"collapsed":false,"trusted":true},"outputs":[{"name":"stdout","output_type":"stream","text":"[(0, u'0.092*health + 0.052*time + 0.052*practic'), (1, u'0.072*drive + 0.071*pressur + 0.041*feel'), (2, u'0.120*brocolli + 0.120*good + 0.118*eat')]\n"}],"source":"print(ldamodel.print_topics(num_topics=3, num_words=3))"}
{"cell_type":"code","execution_count":null,"metadata":{"collapsed":true,"trusted":true},"outputs":[],"source":""}