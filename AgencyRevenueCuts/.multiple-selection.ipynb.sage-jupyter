{"kernelspec":{"display_name":"Python 2 (SageMath)","language":"python","name":"python2"},"language_info":{"codemirror_mode":{"name":"ipython","version":2},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython2","version":"2.7.10"}}
{"cell_type":"code","execution_count":10,"metadata":{"collapsed":false,"trusted":false},"outputs":[],"source":"import pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\ndef typer(x):\n    if x==\"Publicis\" or \\\n       x==\"WPP\" or \\\n       x==\"Interpublic\" or \\\n       x==\"Havas\":    \n        return 'BIGHOLDING'\n    elif x==\"Independent\":        \n        return 'INDY'\n    else:        \n        return 'SMALLHOLDING'\n# orig = pd.read_csv('test-label.csv')\norig = pd.read_csv('2016_adage-indies_v2.1.csv')\ndf1 = orig.copy(deep=True)"}
{"cell_type":"markdown","metadata":{},"source":"<hr>\nFirst thing is to work on a 'scratch' dataframe, and group the Holding companies into 'Big, Small, Independent'\n<hr>"}
{"cell_type":"code","execution_count":11,"metadata":{"collapsed":false,"trusted":false},"outputs":[{"data":{"text/html":"smc-blob::595e95ce-865b-477f-bc66-cc85c806afa1","text/plain":"smc-blob::436cd219-4785-4abf-b898-168680ac803e"},"execution_count":11,"metadata":{},"output_type":"execute_result"}],"source":"df1.PARENT=df1.PARENT.apply(typer)\ndf1"}
{"cell_type":"code","execution_count":21,"metadata":{"collapsed":false,"trusted":false},"outputs":[{"data":{"text/html":"smc-blob::7f52c82a-a9ba-497e-a80c-7dc03b758c43","text/plain":"              2015 US REVENUE   % CHG\nPARENT                               \nBIGHOLDING           16080954  1021.2\nINDY                 12696425  6242.6\nSMALLHOLDING         17975777  1345.2"},"execution_count":21,"metadata":{},"output_type":"execute_result"}],"source":"dfgrouped1=df1.groupby('PARENT').sum()\ndfgrouped1"}
{"cell_type":"code","execution_count":22,"metadata":{"collapsed":false,"trusted":false},"outputs":[{"ename":"TypeError","evalue":"'instancemethod' object has no attribute '__getitem__'","output_type":"error","traceback":["\u001b[1;31m---------------------------------------------------------------------------\u001b[0m","\u001b[1;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[1;32m<ipython-input-22-e4dbe7094534>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m()\u001b[0m\n\u001b[1;32m----> 1\u001b[1;33m \u001b[0mdfgrouped2\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mdf1\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mgroupby\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'PARENT'\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;34m'2015 US REVENUE'\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0msum\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m      2\u001b[0m \u001b[0mdfgrouped2\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n","\u001b[1;31mTypeError\u001b[0m: 'instancemethod' object has no attribute '__getitem__'"]}],"source":"dfgrouped2=df1.groupby[['PARENT','2015 US REVENUE']].sum()\ndfgrouped2"}
{"cell_type":"code","execution_count":23,"metadata":{"collapsed":false,"trusted":false},"outputs":[{"data":{"text/plain":"<matplotlib.text.Text at 0x7ff2e661d310>"},"execution_count":23,"metadata":{},"output_type":"execute_result"},{"data":{"image/png":"smc-blob::0b803921-e41a-48e1-a4c5-f2c3f8e6cc69","text/plain":"<matplotlib.figure.Figure at 0x7ff2f4c6a750>"},"metadata":{},"output_type":"display_data"}],"source":"my_plot= dfgrouped1.unstack().plot(kind='bar',stacked=True,title=\"Breakdown by holding company\")\nmy_plot.set_xlabel(\"Customers\")\nmy_plot.set_ylabel(\"Sales\")"}
{"cell_type":"markdown","metadata":{"collapsed":true},"source":"<hr>\nnot there yet. Still looking for something like this:\n![Histogram](Histogram.png)"}
{"cell_type":"code","execution_count":null,"metadata":{"collapsed":true,"trusted":false},"outputs":[],"source":""}